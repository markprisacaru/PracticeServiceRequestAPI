// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cohesionPractice.Contexts;

namespace cohesionPractice.Migrations
{
    [DbContext(typeof(ServiceRequestContext))]
    partial class ServiceRequestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("cohesionPractice.Entities.ServiceRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuildingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServiceRequests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("727b376b-79ae-498e-9cff-a9f51b848ea4"),
                            BuildingCode = "COH",
                            CreatedBy = "Ricky Martin",
                            CreatedDate = new DateTime(2019, 8, 1, 14, 1, 23, 1, DateTimeKind.Unspecified),
                            CurrentStatus = 1,
                            Description = "Please turn up the AC in suite 1200D. It is too hot here.",
                            LastModifiedBy = "Eric Iglesias",
                            LastModifiedDate = new DateTime(2019, 9, 1, 14, 1, 23, 1, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("727b376b-79ae-498e-9cff-a9f51b848ea5"),
                            BuildingCode = "ACH",
                            CreatedBy = "John Denver",
                            CreatedDate = new DateTime(2020, 9, 1, 14, 1, 23, 122, DateTimeKind.Unspecified),
                            CurrentStatus = 1,
                            Description = "Take me home country roads cause It is freezing cold in here! So turn down the AC!",
                            LastModifiedBy = "Jane Tech support",
                            LastModifiedDate = new DateTime(2020, 12, 1, 14, 1, 23, 1, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("727b376b-79ae-498e-9cff-a9f51b848ea6"),
                            BuildingCode = "ATC",
                            CreatedBy = "Mick Jager",
                            CreatedDate = new DateTime(2019, 8, 1, 14, 1, 23, 1, DateTimeKind.Unspecified),
                            CurrentStatus = 1,
                            Description = "Music Box is broken",
                            LastModifiedBy = "Matt White",
                            LastModifiedDate = new DateTime(2019, 9, 1, 14, 1, 23, 1, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("727b376b-79ae-498e-9cff-a9f51b848ea7"),
                            BuildingCode = "AFC",
                            CreatedBy = "Elton John",
                            CreatedDate = new DateTime(2020, 9, 1, 14, 1, 23, 122, DateTimeKind.Unspecified),
                            CurrentStatus = 2,
                            Description = "I can feel something in the air",
                            LastModifiedBy = "Jack Black",
                            LastModifiedDate = new DateTime(2020, 12, 1, 14, 1, 23, 1, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
